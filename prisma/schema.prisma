// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id String @id @default(uuid())
  username String @unique @db.VarChar(20)
  email String @unique
  fullName String? @db.VarChar(50)
  password String 
  role Role @default(USER)
  token String? @unique @db.VarChar(255)
  reviews Review[] 
  games Library[] 
}

model Game {
  id  String @id @default(uuid())
  name String @db.VarChar(100)
  price Decimal @db.Decimal(10,2)
  description String @db.Text
  releasedAt DateTime
  updatedAt DateTime 
  reviews Review[]
  buyer Library[]
}

model Review {
  id String @id @default(uuid())
  userId String
  gameId String
  rating Float
  review String @db.Text
  createdAt DateTime 
  updatedAt DateTime 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@unique([userId, gameId])
}

model Library {
  userId String
  gameId String
  purchasedAt DateTime 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@id([userId, gameId])

}